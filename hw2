#### Digit product

l=[]
while n // 10 != 0:
  if n % 10  != 0:
    l. append(n % 10)
  n //= 10
l.append(n)
print (l)
prod = 1
for  i in range(len(l)):
  prod *= l[i]
print (prod)


#### Largest Power of 3 

n = int (input()) 
k=3
while n > k:
  k *= 3

print(k/3)


#### Triangle

###Problem 3: Triangle

a = int(input())
b = int(input())
c = int(input())

if a + b <= c or a + c <= b or b + c <= a :
    print("No Triangle")
elif ( ( a^2 + b^2 - c^2 ) / ( 2 * a * b ) ) > 0 and ( ( a^2 + c^2 - a^2 ) / ( 2 * a * c) ) > 0 and ( ( b^2 + c^2 - a^2) / ( 2 * b * c )) > 0 :
    print("Ocute Triangle")
elif ( ( a^2 + b^2 - c^2 ) / ( 2 * a * b ) ) == 0 or ( ( a^2 + c^2 - a^2 ) / ( 2 * a * c) ) == 0 or ( ( b^2 + c^2 - a^2) / ( 2 * b * c )) == 0 :
    print("Right Triangle")
else:
    print("Obtuse Triangle")
    
    
##### The root of the number
#### Problem 4: The Root of the Number

n = int(input())
root = 0
while n > 0 or root > 10 :
    if n == 0 :
        n = root
        root = 0
    digit = n % 10
    root += digit
    n //= 10
print(root)

